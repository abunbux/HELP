# -*- mode: org; -*-
#+TITLE: Примеры решения задач на Python с сайта pythonist.ru
#+DESCRIPTION:
#+KEYWORDS:
#+AUTHOR:
#+email:
#+INFOJS_OPT:
#+STARTUP:  content

#+DATE: CREATED: <Wed Jun 15 14:11:21 EEST 2022>
# Time-stamp: <Последнее обновление -- Thursday June 16 19:54:32 EEST 2022>


- [[https://pythonist.ru/primery-resheniya-prostyh-zadach-na-yazyke-python/][Примеры решения простых задач на языке Python с сайта pythonist.ru]] (внешняя ссылка)

** 01. Программа для вычисления среднего значения в заданном списке чисел

   [[https://pythonist.ru/programma-dlya-vychisleniya-srednego-znacheniya-v-zadannom-spiske-chisel/][Ссылка на страничку с задачкой]]

   Программа принимает введенные по одному числа, которые сохраняются в список. Затем она выводит
   среднее значение всех элементов этого списка.

   Моё решение [[file:01_average_value_calculation.py][01_average_value_calculation.py]]

   #+BEGIN_SRC python

   while True:
       try:
           count = int(input('Сколько чисел будем использовать? '))
       except ValueError:
           print('Это не совсем число. Попробуйте снова.')
       else:
           print(f'Вы ввели {count}')
           break


   print('Сейчас я буду запрашивать у Вас числовые значения.')
   a = []


   for i in range(0, count):
       while True:
           try:
               n = int(input('Введите число '))
               a.append(n)
           except ValueError:
               print('Это не совсем число. Попробуйте снова.')
           else:
               break


   average = sum(a) / count
   print('Среднее значение', round(average, 2))

   #+END_SRC

   Это не совсем то решение, которое показано на сайте, здесь реализована проверка на введение
   корректных данных.

** 02. Обмен значений двух переменных

   [[https://pythonist.ru/obmen-znachenij-dvuh-peremennyh/][Ссылка на страничку с задачкой]]

   Данная программа принимает от пользователя два значения и записывает каждое из них в отдельную
   переменную. Затем она меняет местами значения этих переменных без ввода временной переменной.

   Моё решение [[file:02_value_exchange.py][02_value_exchange.py]]

   #+BEGIN_SRC python

   a = input('Первое число ')
   b = input('Второе число ')
   a, b = b, a
   print(f'Первое число {a}')
   print(f'Второе число {b}')

   #+END_SRC

   На сайте приведено какое-то чудноватое решение этой задачки.
   Я сперва подумал, что сделал что-то не то, но затем внизу странички обнаружил примечание
   переводчика.

   Всё я сделал верно. С реализацией проверки на корректные данные заморачиваться не стал.

** 03. Вычисление числа n + nn + nnn при заданном числе n

   [[https://pythonist.ru/vychisleniya-chisla-n-nn-nnn-pri-zadannom-chisle-n/][Ссылка на страничку с задачкой]]

   Программа принимает число n, а затем возвращает сумму вида n + nn + nnn. Здесь nn и nnn
   обозначает повторяющееся 2 или 3 раза число n, записанное в десятичной системе счисления.
   Например, если n = 5, то nn и nnn будут равны 55 и 555 сответственно.

   Моё решение [[file:03_calc_number.py][03_calc_number.py]]

   #+BEGIN_SRC python

   a = []
   n = input('Введите число ')
   a.append(n)
   a.append(n * 2)
   a.append(n * 3)

   print(a)
   print(sum(map(int, a)))

   #+END_SRC

** 04. Программа для написания заданного числа в обратном порядке

   [[https://pythonist.ru/programma-dlya-napisaniya-zadannogo-chisla-v-obratnom-poryadke/][Ссылка на страничку с задачкой]]

   Данная программа получает на вход число и выводит его в «перевернутом» виде (т.е., цифры,
   составляющие введенное число, в результате будут построены в обратном порядке).

   Моё решение [[file:04_number_from_right_to_left.py][04_number_from_right_to_left.py]]

   #+BEGIN_SRC python

   while True:
       number = input("Введите число не менее двузначного: ")
       if not number.isnumeric():
           print("Вы ввели не число. Попробуйте снова: ")
       elif int(number) <= 9:
           print("Мы договаривались, что число будет двухзначное.")
       else:
           print(str(number[::-1]))
           break

   #+END_SRC

   По результату этой задачки требуется пополнить знания о проверке вводимых пользователем данных, в
   том числе и множественной проверки. Завис надолго.

   Сама задачка очень даже лёгкая, но как только стал проверять данные, вскипятил мозг.

   Немного поясню о необходимости проверок:
   - чтобы отобразить вводимые данные наоборот (справа налево) эти данные должны иметь не менее двух
     знаков. Это раз;
   - чтобы сравнить количество знаков вводимых и требуемых. Это два;
   - отобразить нужно числа (по условию), значит нужно проверить вводимые пользователем данные, может
     совсем и не числа он там вводит?! (а буквы?)

**** TODO @todo Изучить способы проверки вводимых данных, также множественные проверки.

** 05. Программа проверки знака числа

   [[https://pythonist.ru/programma-proverki-znaka-chisla/][Ссылка на страничку с задачкой]]

   Данная программа принимает на вход число и проверяет, положительное оно или отрицательное.

   Моё решение [[file:05_positive_or_negative.py][05_positive_or_negative.py]]

   #+BEGIN_SRC python

   n = int(input('Введите любое число, можно даже отрицательное: '))
   if n > 0:
       print(f'Число {n} является положительным.')
   elif n < 0:
       print(f'Число {n} является отрицательным.')
   else:
       print('Вы ввели 0')

   #+END_SRC

   Второе решение ниже, но немного не закончено. Опять завис с проверкой.
   Если при запросе ввести знак ~-~ и после буквенные символы, что-то вроде этого ~-iur~ - система
   ругается. Можно, конечно, сделать через ~try except~, но хочу ещё помучаться, а то недавно где-то
   прочитал, что стараться всё сделать через ~try except~ это чистый изврат.

**** TODO @todo Доработать проверку в следующем коде.

     #+BEGIN_SRC python

     while True:
         n = input('Введите любое число, можно даже отрицательное: ')
         if n.isalpha():
             print(f'Вводить нужно число, а не хрень вроде {n}.')
         else:
             if int(n) > 0:
                 print(f'Число {n} является положительным.')
             elif int(n) < 0:
                 print(f'Число {n} является отрицательным.')
             else:
                 print('Вы ввели 0')
                 break
         break

     #+END_SRC

** 06. Программа определения успеваемости студента по его оценкам

   [[https://pythonist.ru/programma-opredeleniya-uspevaemosti-studenta-po-ego-oczenkam/][Ссылка на страничку с задачкой]]

   Программа принимает на вход оценки по пяти предметам и по определенным критериям выставляет
   уровень успеваемости.

   Моё решение [[file:06_student_achievement.py][06_student_achievement.py]]

   Современные реалии в учёбе я не знаю, а посему пишу приблизительное определение успеваемости,
   вернее будет сказать, что-то помню из детства. У меня, правда, была ещё пятибальная система.

   #+BEGIN_SRC python

   a = []
   for i in range(5):
       a.append(int(input('Введите оценку от 10 до 100: ')))

   aver = sum(a)/5
   print(f'Ваша оценка {aver}.')
   if aver <= 50:
       print('Да Вы, батенька, лентяй. Совсем учиться не хотите.')
   elif 50 < aver <= 70:
       print('Двоечник Вы. Стыдно!!!')
   elif 70 < aver <= 80:
       print('Ну-у-у, тройка ещё не приговор.')
   elif 70 < aver <= 90:
       print('Неплохо, неплохо. Хорошист звучит почти как отличник.')
   elif aver >= 91:
       print('Вы молодец. Отличник - звучит гордо!')

   #+END_SRC

   Проверку на корректные данные опять делать не стал.

** 07. Вывод всех чисел, кратных определенному числу, в заданном диапазоне

   [[https://pythonist.ru/vyvod-vseh-chisel-v-zadannom-diapazone-kotorye-delyatsya-na-opredelennoe-chislo/][Ссылка на страничку с задачкой]]

   Данная программа должна вывести все числа в заданном диапазоне, которые делились бы без остатка
   на определенное число.

   Моё решение [[file:07_division.py][07_division.py]]

   #+BEGIN_SRC python

   start = int(input('Откуда начнём считать? Введите число: '))
   end = int(input('И, конечно же, до каких пор? Введите ещё одно число: '))
   division = int(input('Я Вам ещё не надоел? На что делим? Снова введите число: '))
   print(list(filter(lambda x: (x % division == 0), range(start, end + 1))))

   #+END_SRC

   Это я, типа, похвастался некоторым знанием.

**** TODO @todo Доделать задачку с проверкой данных.
