# -*- mode: org; -*-
#+TITLE: index
#+DESCRIPTION:
#+KEYWORDS:
#+AUTHOR:
#+email:
#+INFOJS_OPT:
#+STARTUP:  content

#+DATE: CREATED: <Thu Jun 26 08:49:17 EEST 2021>
# Time-stamp: <Последнее обновление -- Sunday February 5 22:6:57 MSK 2023>


С этого файла начинается моя небольшая справочная система.

** gentoo

   - [[file:gentoo/install_gentoo.org][установка и настройка gentoo]]
   - [[file:gentoo/portage.org][portage]]

** search

   [[file:search/grep.org][grep]]

   [[file:search/ANGRYsearch.org][ANGRYsearch]]

** fonts

   [[file:fonts/working_with_fonts.org][работа со шрифтами в системе]]

   various fonts

   [[file:fonts/nerd-fonts.org][nerd-fonts]]

   [[https://github.com/edwardtufte/et-book][et-book ]] (внешняя ссылка)

   [[file:PS1/powerline.org::*powerline-symbols, powerline fonts (\[\[https://github.com/powerline/fonts\]\[powerline fonts на github\]\])][powerline, powerline-gitstatus, powerline-symbols, powerline-fonts]]

** прочее

   [[file:other/scripts.org][скрипты для различных нужд]]

** полезные приложения

   [[file:useful_applications/fzf.org][fzf]]

   [[file:useful_applications/marker.org][marker]]

   [[file:useful_applications/bat.org][bat]] ([[https://github.com/sharkdp/bat][sharkdp/bat на github]])

   [[file:useful_applications/fzf_bookmarks.org][Fuzzy bookmarks for your shell]]

   [[file:useful_applications/forgit.org][forgit]]

   [[file:useful_applications/delta.org][delta]]

** terminal multiplexers (терминальные мультиплексоры)

   [[file:terminal_multiplexers/tmux.org][tmux]] (https://man7.org/linux/man-pages/man1/tmux.1.html)

   [[file:terminal_multiplexers/tmux-bash-completion.org][tmux-bash-completion]] ([[https://github.com/imomaliev/tmux-bash-completion][tmux-bash-completion на github]])

   [[file:terminal_multiplexers/screen.org][screen]]

** git

   #+BEGIN_SRC shell

   git status
   git add ...
   git commit -m "..."
   git push

   #+END_SRC

   - [[https://drewdevault.com/2019/12/30/dotfiles.html][Managing my dotfiles as a git repository]] (December 30, 2019, внешняя ссылка)
   - [[https://www.8host.com/blog/upravlenie-konfiguracionnymi-fajlami-s-pomoshhyu-git/][Управление конфигурационными файлами с помощью git]] (9 февраля, 2015, внешняя ссылка)

   - [[file:git/git_submodule.org][git submodule]]

*** Отмена коммитов

    - Коммит сделан, но по здравом размышлении оказался недостаточно хорош - в таком случае можно
      его изменить командой:

      #+BEGIN_SRC shell

      git commit -a --amend

      #+END_SRC

      В этом случае будет открыт редактор, прописанный в переменной ~$EDITOR~ и можно будет всё
      подправить.

*** github

    #+BEGIN_SRC shell

    cd ~./emacs.d
    git init
    # Создаём .gitignor
    git add .
    git remote add origin git@github.com:abunbux/dotemacs.git
    git push -u origin master

    #+END_SRC


    Switching remote URLs from HTTPS to SSH


    #+BEGIN_SRC shell

    $ git remote -v
    > origin  https://github.com/USERNAME/REPOSITORY.git (fetch)
    > origin  https://github.com/USERNAME/REPOSITORY.git (push)
    # 2. Change your remote's URL from HTTPS to SSH with the git remote set-url command.
    $ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git
    # 3. Verify that the remote URL has changed.
    $ git remote -v
    > origin  git@github.com:abunbux/dotemacs.git (fetch)
    > origin  git@github.com:abunbux/dotemacs.git (push)

    #+END_SRC

** shell

   [[file:shell/shopt.org][shopt]]

   [[https://www.freecodecamp.org/news/bashrc-customization-guide/][bashrc customization guide]] (внешняя ссылка)

   [[https://tldp.org/HOWTO/Bash-Prompt-HOWTO/index.html][Bash Prompt HOWTO]] (внешняя ссылка)

** PS1 and PROMT (приглашение командной строки)

   [[file:PS1/up_your_own.org][настройка приглашения своими силами]]

   [[file:PS1/powerline.org][powerline, powerline-gitstatus, powerline-symbols, powerline-fonts]]

   [[file:PS1/simple_bash_prompt.org][SBP - Simple Bash Prompt]]

   [[file:PS1/powerline-2column.org][powerline-2column.bash]]

   [[file:PS1/liquidprompt.org][liquidprompt]]

   [[file:PS1/bash-powerline-shell_(ps1_prompt).org][bash-powerline-shell (ps1_prompt)]]

   [[file:PS1/pureline.org][pureline]]

   [[file:PS1/trueline.org][trueline]]

   [[https://starship.rs/][Starship]] (внешняя ссылка)

   [[https://github.com/0rax/fishline][fishline]] (внешняя ссылка)

   [[https://github.com/diogocavilha/fancy-git][fancy-git]] (внешняя ссылка)

   [[https://github.com/reujab/silver][silver]] (внешняя ссылка)

   [[https://coelhorjc.wordpress.com/2015/01/13/how-to-change-bash-prompt-using-ps1-git-prompt-sh-liquid-prompt-bash-it-and-powerline/][HOW TO CHANGE BASH PROMPT (USING PS1, GIT-PROMPT.SH, LIQUID-PROMPT, BASH-IT AND POWERLINE)]] (внешняя ссылка)

   [[https://github.com/oyvindstegard/bashgit][bashgit]]  (внешняя ссылка)

   *prompt*  /нужно попробовать/  https://github.com/automotiveMastermind/prompt

** anki

   [[file:anki/anki-install.org][anki-install]]

** kodi

   [[https://seo-michael.co.uk/best-xxx-add-ons-for-kodi/][Best Adult XXX AddOns for Kodi]]  (внешняя ссылка)
   [[https://seo-michael.co.uk/how-to-install-xxx-o-dus-or-youporn-kodi-krypton-jarvis/][How to Install XXX-O-DUS Kodi]] (внешняя ссылка)
   [[https://seo-michael.co.uk/how-to-install-fap-zone-kodi/][How to Install Fap Zone Kodi]] (внешняя ссылка)
   [[https://seo-michael.co.uk/how-to-install-the-crew-addon-kodi/][How to Install The Crew Kodi 19]] (внешняя ссылка)

** boot system (uefi, grub, gpt, mbr etc.)

   Статья на Хабр - [[https://habr.com/ru/post/404511/][Что такое UEFI, и чем он отличается от BIOS?]]

   Статья на Хабр - [[https://habr.com/ru/post/394005/][Настройка UEFI Dual Boot системы, приправленной rEFInd]].

   ArchWiki[[https://wiki.archlinux.org/title/GRUB_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)#%D0%A2%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_GRUB2-BIOS_%D0%BA_GPT][ GRUB (Русский).
   ]]
*** Требования GRUB2-BIOS к GPT ([[https://wiki.archlinux.org/title/GRUB_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)#%D0%A2%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_GRUB2-BIOS_%D0%BA_GPT][отрывок из статьи ArchWiki]])

    Начальный сектор диска с разметкой GPT зарезервирован, как ни странно, для
    MBR, которая обычно используется для совместимости, но точно так же оставляет
    в секторе те же 442 байта, достаточные для встраивания кода загрузчика из
    boot.img. Сама GPT располагается на следующих секторах.

    В отличии от MBR, GPT предусматривает возможность создания на диске
    специального раздела для встраивания BIOS-загрузчика. Раздел BIOS boot
    partition имеет GUID=21686148-6449-6e6f-744e656564454649, и может быть создан
    в fdisk как раздел типа 4, или в gdisk как раздел типа EF02. Этот раздел не
    должен содержать никакой файловой системы, иначе она будет затёрта при
    установке загрузчика. Номер раздела может быть любым, расположение также
    практически любым. На больших дисках рекомендуется располагать BIOS boot
    partition в пределах первых 2ТБ, поскольку средства BIOS, скорей всего, не
    позволят прочесть более дальние сектора.

    Если такой раздел на диске с GPT создан, программа установки GRUB2
    автоматически найдёт его и использует для встраивания стартового образа
    BIOS-версии загрузчика. Минимальные требования к размеру раздела те же, что и
    для просвета перед первым разделом в случае MBR – на это место должен
    поместиться образ core.img. Так как расположение BIOS boot partition не
    привязано к началу диска, создать его с размером порядка 1МБ будет несложно,
    и более чем достаточно в любом случае.

*** Мои мучения и решения

    Дано - материнка MSI P35 NEO (куплена в далёком то ли 2008, то ли 2009 году),
    Ни о каком UEFI не знает.

    Система ставилась gentoo - январь 2022 года. Установка происходила из под
    загрузочного диска Calculate Linux того-же года, диск, на который ставится
    система, имеет тип метки GPT. Как обычно создал /boot раздел, сделал его
    загрузочным. При установке grub досадная неприятность. Ошибка показана ниже:

    #+BEGIN_SRC shell

    grub-install /dev/sda
    Installing for i386-pc platform.
    ,**grub-install: warning: this GPT partition label contains no BIOS Boot Partition; embedding won't be possible.**
              grub-install: warning: Embedding is not possible.  GRUB can only be installed in this setup by using blocklists.
    However, blocklists are UNRELIABLE and their use is discouraged..
              ,**grub-install: error: will not proceed with blocklists.**

    #+END_SRC

    Опишу действия без демонстрации кода - пишу *не по горячим следам*.

    В конце диска каким-то чудом остался раздел в 1,1 Мб. Создал раздел и присвоил флаг bios_grub.
    *Всё!!!*

    Таки образом - для загрузки понадобился первый загрузочный раздел с флагами (метками):

    - загрузочный,
    - legacy_boot,
    - esp

      и последний (но может быть в любом месте) малюсенький с флагом (меткой):
      - bios_grub.

** бэкап всей системы

   #+BEGIN_SRC shell

   tar cfzpv /mnt/gentoo/home/collection/server.tar.gz \
       --exclude=/mnt/gentoo/home --exclude=/lost+found --exclude=/dev \
       --exclude=/proc --exclude=/sys --exclude=/tmp --exclude=/mnt/gentoo/usr/src \
       /mnt/gentoo

   #+END_SRC

** VM

   #+BEGIN_SRC shell

   eselect java-vm list
   eselect java-vm set user 2
   eselect java-vm set system openjdk-bin-11

   #+END_SRC

** vpn

   [[https://ip-calculator.ru/blog/ask/kak-nastroit-klient-wireguard-vpn-s-graficheskim-interfejsom-networkmanager/][Как настроить клиент WireGuard VPN с графическим интерфейсом NetworkManager]] (внешняя ссылка)

** django, nginx, gunicorn, uWSGI и сопутствующее
*** Нашёл подсказки на ЛОРе
**** https://www.linux.org.ru/forum/admin/13981687?cid=13982071 (NetSurf, 25.01.18 16:48:39 MSK)

     Вот прямо от души отсылаю тебе рабочую схему.
     Мой самый первый рабочий деплой Django на Ubuntu Server.
     Cколько времени я промаялся, чтобы Джанга завелась. Эти конфиги потом еще снились.

     #Установка pip install Django gunicorn

     #создание Django project django-admin startproject myproject cd myproject

     #Тест gunicorn gunicorn myproject.wsgi:application --bind тут_ip_сервера:8000

     #Настройка nginx cd /etc/nginx/sites-available nano default

     #+begin_src conf

         server {
         listen 80;
         server_name ip_моего_сервера; #либо ip, либо доменное имя
         access_log  /var/log/nginx/example.log;

         location /static/ {
         root /opt/myenv/myproject/;
         expires 30d;
         }

         location / {
         proxy_pass http://127.0.0.1:8000;
         proxy_set_header Host $server_name;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         }
         }

     #+end_src

     #переход в папку с Django проектом /var/www/projects/my_site

     #перезагрузка nginx sudo /etc/init.d/nginx restart

     #Запуск gunicorn gunicorn myproject.wsgi:application в браузере открыть ip адресс сервера(загрузится стартовая страница Django)

     #Установим supervisor apt-get install supervisor

     #Создадим конфиг файл для gunicorn

     cd /opt/myenv/myproject/myproject #лучше делать именно в каталоге с settings.py touch gunicorn.conf.py

     bind = '127.0.0.1:8000' workers = 3 user = «nobody»

     #создадим конфиг файл для супервизора (например для приложения emailcollector)

     в /etc/supervisor/conf.d/ создать name_project.conf

     [program:emailcollector]

     command=/var/www/projects/env/bin/gunicorn emailcollector.wsgi:application -c /var/www/projects/emailcollector/emailcollector/gunicorn.conf.py

     directory=/var/www/projects/emailcollector user=nobody autorestart=true redirect_stderr=true

     #команды супервизора: supervisorctl reread supervisorctl update supervisorctl status my_project supervisorctl restart my_app

     #перезагрузка сервера shutdown -r now

**** https://www.linux.org.ru/forum/admin/13981687?cid=13982204 (NetSurf, 25.01.18 17:29:34 MSK)

     Попробуй запустить из корня и посмотреть, откроется ли в браузере сайт

     gunicorn my_project.wsgi:application --bind тут_ip_сервера:8000

     Если норм, то создай конфиг гуникорна

     gunicorn.conf.py

     bind = '127.0.0.1:8000' workers = 3 user = «nobody»

     #конфиг супервизора

     в /etc/supervisor/conf.d/ создать name_project.conf

     [program:emailcollector]

     command=/var/www/projects/env/bin/gunicorn emailcollector.wsgi:application -c /var/www/projects/emailcollector/emailcollector/gunicorn.conf.py

     directory=/var/www/projects/emailcollector user=nobody autorestart=true redirect_stderr=true

     #выполнить команды супервизора и перезагрузить сервер supervisorctl reread supervisorctl update
     #supervisorctl status my_project supervisorctl restart my_app

**** Добрый человек NetSurf выложил алгоритм действий (запись JAN 25TH, 2018)

     #+begin_src conf

         1) обновление пакетов ubuntu
         sudo apt-get update


         2) соединение с сервером
         ssh root@tut_ip_adress_servera
         password
         =================================

         3) установка
         sudo apt-get install nginx
         sudo apt-get install python3-setuptools
         sudo apt install python-virtualenv

         4) переход в /var/www и создание папки projects

         5) Создание виртуального окружения
         virtualenv -p python3 env
         source ./env/bin/activate

         6) Ставим django и gunicorn.
         pip install django gunicorn

         7) создание Django project
         django-admin startproject myproject
         cd myproject

         8) Тест gunicorn

         gunicorn myproject.wsgi:application --bind 111.222.333.44:8000  #пишете ваш ip

         9) Подключение статических файлов
         nano settings.py

         STATIC_ROOT = os.path.join(BASE_DIR, "static/")
         python manage.py collectstatic

         10) Настройка nginx
         cd /etc/nginx/sites-available/

         nano default

         уддалить все и записать:

         server {
             listen 80;
             server_name 111.222.333.44; #либо ip, либо доменное имя
             access_log  /var/log/nginx/example.log;

             location /static/ {
                 root /opt/myenv/myproject/;
                 expires 30d;
             }

             location / {
                 proxy_pass http://127.0.0.1:8000;
                 proxy_set_header Host $server_name;
                 proxy_set_header X-Real-IP $remote_addr;
                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             }
           }

         11) переход в папку с Django проектом
         /var/www/projects/tds

         12)перезагрузка nginx
         sudo /etc/init.d/nginx restart

         13)Запуск gunicorn
         gunicorn myproject.wsgi:application
         в браузере открыть ip адресс сервера(загрузится стартовая страница Django)

         14)Установим supervisor

         apt-get install supervisor
         =====================================
         15)Создадим конфиг файл для gunicorn

         cd /opt/myenv/myproject/myproject #лучше делать именно в каталоге с settings.py
         touch gunicorn.conf.py

         bind = '127.0.0.1:8000'
         workers = 3
         user = "nobody"
         =====================================
         16)создадим конфиг файл для супервизора

         в /etc/supervisor/conf.d/ создать name_project.conf

         [program:emailcollector]
         command=/var/www/projects/env/bin/gunicorn emailcollector.wsgi:application -c /var/www/projects/emailcollector/emailcollector/gunicorn.conf.py
         directory=/var/www/projects/emailcollector
         user=nobody
         autorestart=true
         redirect_stderr=true
         =====================================
         команды супервизора:
         supervisorctl reread
         supervisorctl update
         supervisorctl status myproject
         supervisorctl restart firstsite

         17) перезагрузка сервера
         shutdown -r now
         =====================================
         Установка MySQL
         sudo apt-get install mysql-server
         inter password

         #start
         sudo /etc/init.d/mysql start

         mysql -u root -p -h localhost
         password

         #Создание базы данных
         CREATE DATABASE `djangodb` /*!40100 DEFAULT CHARACTER SET utf8 */;

         #Отображение всех баз
         show databases;

         #Создание пользователя! GRANT ALL PRIVILEGES(доверяем все привилегии), ON djangodb.*(на базой данных, *(все таблицы)
         #c паролем IDENTIFIED BY 'alex';
         GRANT ALL PRIVILEGES ON djangodb.* TO 'alex'@'localhost' IDENTIFIED BY 'alex';

         #Выход из консоли root ctrl + d

         #Вход в базу данных
         mysql -u alex -p -h localhost

         #Выбрать нужную базу(например djangodb)
         use djangodb

         show tables;

         #Подключение Django к Mysql
         sudo apt-get install python-dev python3-dev
         sudo apt-get install libmysqlclient-dev
         pip install pymysql
         pip install mysqlclient

     #+end_src

*** Официальная документация uWSGI
    [[https://uwsgi.readthedocs.io/en/latest/tutorials/Django_and_nginx.html][Setting up Django and your web server with uWSGI and nginx]]

*** nginx
    [[https://nginx.org/ru/docs/beginners_guide.html][Руководство для начинающих]]
    [[https://nginx.org/ru/docs/http/configuring_https_servers.html][Настройка HTTPS-серверов]]
*** Django
    [[https://metanit.com/python/django/1.1.php][Введение в Django]] - простым языком для начинающих
*** apache и mod_wsgi для django
    [[https://www.8host.com/blog/obsluzhivanie-prilozhenij-django-s-pomoshhyu-apache-i-mod_wsgi-v-debian-8/][ОБСЛУЖИВАНИЕ ПРИЛОЖЕНИЙ DJANGO С ПОМОЩЬЮ APACHE И MOD_WSGI В DEBIAN 8]]
*** nginx и gunicorn
    [[https://pythonworld.ru/web/django-ubuntu1604.html][Настраиваем Django + virtualenv + nginx + gunicorn + PostgreSQL + memcached + letsencrypt на
    Ubuntu 16.04]]
*** Алексей Голобурдин - канал «Диджитализируй!» на youtube
    [[https://www.youtube.com/watch?v=uXTZMurM0FY&list=TLPQMzEwMTIwMjNrFl9qPcK7Ew&index=11][Шаблон Django проекта с конфигами для быстрого разворачивания сервера]] (Диджитализируй!)
    Это ссылка на шаблон на github [[https://github.com/alexey-goloburdin/django-clean-template][alexey-goloburdin/django-clean-template]].
