# -*- mode: org; -*-
#+TITLE: index
#+DESCRIPTION:
#+KEYWORDS:
#+AUTHOR:
#+email:
#+INFOJS_OPT:
#+STARTUP:  content

#+DATE: CREATED: <Thu Jun 26 08:49:17 EEST 2021>
# Time-stamp: <Последнее обновление -- Thursday May 12 22:14:30 EEST 2022>


** gentoo

   [[file:gentoo/install_gentoo.org][установка и настройка gentoo]]

   [[file:gentoo/portage.org][portage]]

** emacs

   [[file:emacs/README.org][README.org]]

   [[file:emacs/keybindings.org][keybindings.org]]

   [[file:emacs/literate-config_without_org-babel.org][literate-config без org-babel]]

   [[file:emacs/emacs-daemon.org][emacs-daemon]]

   https://smartparens.readthedocs.io/en/latest/pair-management.html

   [[https://github.com/nilcons/emacs-use-package-fast][emacs-use-package-fast]] (Обсуждение того, как добиться быстрой инициализации Emacs с помощью ~melpa~ и ~use-package~.)

** emacs org-mode

   [[file:emacs/org-babel.org][org-babel]]

   [[file:emacs/images.org][iimage-mode (изображения в буфере)]]

   ссылка в режиме org на заголовок в другом файле org
   (global-set-key (kbd "C-c l") 'org-store-link)
   (global-set-key (kbd "C-c C-l") 'org-insert-link)

   вы можете нажать C-c l где-нибудь внутри или на элементе, на который хотите
   сослаться, затем C-c C-l туда , где вы хотите разместить ссылку. Он попросит
   вас подтвердить местоположение и затем ввести имя ссылки - вы можете просто
   нажать Enter, чтобы принять значения по умолчанию. Будет создана ссылка типа
   [[file: foo.org :: * bar] [link-name]], которая отображается как link-name.

** search

   [[file:search/grep.org][grep]]

   [[file:search/ANGRYsearch.org][ANGRYsearch]]

** fonts

   [[file:fonts/working_with_fonts.org][работа со шрифтами в системе]]

   various fonts

   [[file:fonts/nerd-fonts.org][nerd-fonts]]

   et-book (https://github.com/edwardtufte/et-book)

   [[file:PS1/powerline.org::*powerline-symbols, powerline fonts (\[\[https://github.com/powerline/fonts\]\[powerline fonts на github\]\])][powerline-fonts]] (ссылка на раздел в этой справочной системе)

** прочее

   [[file:other/scripts.org][скрипты для различных нужд]]

** полезные приложения

   [[file:useful_applications/fzf.org][fzf]]

   [[file:useful_applications/marker.org][marker]]

   [[file:useful_applications/bat.org][bat]] ([[https://github.com/sharkdp/bat][sharkdp/bat на github]])

   [[file:useful_applications/fzf_bookmarks.org][Fuzzy bookmarks for your shell]]

   [[file:useful_applications/forgit.org][forgit]]

   [[file:useful_applications/delta.org][delta]]

** terminal multiplexers (терминальные мультиплексоры)

   [[file:terminal_multiplexers/tmux.org][tmux]] (https://man7.org/linux/man-pages/man1/tmux.1.html)

   [[file:terminal_multiplexers/tmux-bash-completion.org][tmux-bash-completion]] ([[https://github.com/imomaliev/tmux-bash-completion][tmux-bash-completion на github]])

   [[file:terminal_multiplexers/screen.org][screen]]

** git

   [[file:git/dotfiles.org][отслеживание dotfiles]]

   [[file:git/git_submodule.org][git submodule]]

** shell

   [[file:shell/shopt.org][shopt]]

   настройка bash
   (https://www.freecodecamp.org/news/bashrc-customization-guide/)

   https://tldp.org/HOWTO/Bash-Prompt-HOWTO/index.html

** PS1 and PROMT (приглашение командной строки)

   [[file:PS1/up_your_own.org][настройка приглашения своими силами]]

   [[file:PS1/powerline.org][powerline, powerline-gitstatus, powerline-symbols, powerline-fonts]]

   [[file:PS1/simple_bash_prompt.org][SBP - Simple Bash Prompt]]

   [[file:PS1/powerline-2column.org][powerline-2column.bash]]

   [[file:PS1/liquidprompt.org][liquidprompt]]

   [[file:PS1/bash-powerline-shell_(ps1_prompt).org][bash-powerline-shell (ps1_prompt)]]

   [[file:PS1/pureline.org][pureline]]

   [[file:PS1/trueline.org][trueline]]

   Starship        https://starship.rs/

   fishline        https://github.com/0rax/fishline

   fancy-git       https://github.com/diogocavilha/fancy-git

   silver          https://github.com/reujab/silver

   https://coelhorjc.wordpress.com/2015/01/13/how-to-change-bash-prompt-using-ps1-git-prompt-sh-liquid-prompt-bash-it-and-powerline/

   bashgit         https://github.com/oyvindstegard/bashgit

   *prompt*  /нужно попробовать/  https://github.com/automotiveMastermind/prompt

** anki

   [[file:anki/anki-install.org][anki-install]]

** kodi

   [[https://seo-michael.co.uk/best-xxx-add-ons-for-kodi/][Best Adult XXX AddOns for Kodi]]
   [[https://seo-michael.co.uk/how-to-install-xxx-o-dus-or-youporn-kodi-krypton-jarvis/][How to Install XXX-O-DUS Kodi]]
   [[https://seo-michael.co.uk/how-to-install-fap-zone-kodi/][How to Install Fap Zone Kodi]]
   [[https://seo-michael.co.uk/how-to-install-the-crew-addon-kodi/][How to Install The Crew Kodi 19]]

** boot system (uefi, grub, gpt, mbr etc.)

   Статья на Хабр - [[https://habr.com/ru/post/404511/][Что такое UEFI, и чем он отличается от BIOS?]]

   Статья на Хабр - [[https://habr.com/ru/post/394005/][Настройка UEFI Dual Boot системы, приправленной rEFInd]].

   ArchWiki[[https://wiki.archlinux.org/title/GRUB_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)#%D0%A2%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_GRUB2-BIOS_%D0%BA_GPT][ GRUB (Русский).
   ]]
*** Требования GRUB2-BIOS к GPT ([[https://wiki.archlinux.org/title/GRUB_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)#%D0%A2%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_GRUB2-BIOS_%D0%BA_GPT][отрывок из статьи ArchWiki]])

    Начальный сектор диска с разметкой GPT зарезервирован, как ни странно, для
    MBR, которая обычно используется для совместимости, но точно так же оставляет
    в секторе те же 442 байта, достаточные для встраивания кода загрузчика из
    boot.img. Сама GPT располагается на следующих секторах.

    В отличии от MBR, GPT предусматривает возможность создания на диске
    специального раздела для встраивания BIOS-загрузчика. Раздел BIOS boot
    partition имеет GUID=21686148-6449-6e6f-744e656564454649, и может быть создан
    в fdisk как раздел типа 4, или в gdisk как раздел типа EF02. Этот раздел не
    должен содержать никакой файловой системы, иначе она будет затёрта при
    установке загрузчика. Номер раздела может быть любым, расположение также
    практически любым. На больших дисках рекомендуется располагать BIOS boot
    partition в пределах первых 2ТБ, поскольку средства BIOS, скорей всего, не
    позволят прочесть более дальние сектора.

    Если такой раздел на диске с GPT создан, программа установки GRUB2
    автоматически найдёт его и использует для встраивания стартового образа
    BIOS-версии загрузчика. Минимальные требования к размеру раздела те же, что и
    для просвета перед первым разделом в случае MBR – на это место должен
    поместиться образ core.img. Так как расположение BIOS boot partition не
    привязано к началу диска, создать его с размером порядка 1МБ будет несложно,
    и более чем достаточно в любом случае.

*** Мои мучения и решения

    Дано - материнка MSI P35 NEO (куплена в далёком то ли 2008, то ли 2009 году),
    Ни о каком UEFI не знает.

    Система ставилась gentoo - январь 2022 года. Установка происходила из под
    загрузочного диска Calculate Linux того-же года, диск, на который ставится
    система, имеет тип метки GPT. Как обычно создал /boot раздел, сделал его
    загрузочным. При установке grub досадная неприятность. Ошибка показана ниже:

    #+BEGIN_SRC conf

          grub-install /dev/sda
          Installing for i386-pc platform.
          ,**grub-install: warning: this GPT partition label contains no BIOS Boot Partition; embedding won't be possible.**
          grub-install: warning: Embedding is not possible.  GRUB can only be installed in this setup by using blocklists.  However, blocklists are UNRELIABLE and their use is discouraged..
          ,**grub-install: error: will not proceed with blocklists.**

    #+END_SRC

    Опишу действия без демонстрации кода - пишу не по горячим следам.

    В конце диска каким-то чудом остался раздел в 1,1 Мб. Создал раздел и присвоил
    флаг bios_grub. Всё!!!

    Таки образом - для загрузки понадобился первый загрузочный раздел с флагами
    (метками):

    - загрузочный,
    - legacy_boot,
    - esp

    и последний (но может быть в любом месте) малюсенький с флагом (меткой):
    - bios_grub.

** бэкап всей системы

   tar cfzpv /mnt/gentoo/home/collection/server.tar.gz \
   --exclude=/mnt/gentoo/home --exclude=/lost+found --exclude=/dev \
   --exclude=/proc --exclude=/sys --exclude=/tmp --exclude=/mnt/gentoo/usr/src \
   /mnt/gentoo

** VM

   #+BEGIN_SRC shell

     eselect java-vm list
     eselect java-vm set user 2
     eselect java-vm set system openjdk-bin-11

   #+END_SRC

** vpn

   [[https://ip-calculator.ru/blog/ask/kak-nastroit-klient-wireguard-vpn-s-graficheskim-interfejsom-networkmanager/][Как настроить клиент WireGuard VPN с графическим интерфейсом NetworkManager]]
   (внешняя ссылка)

** python

*** Автономный (оффлаййн) просмотр документации python:

**** pydoc

     Утилита ~pydoc~ устанавливается вместе с ~dev-lang/python-exec~.

     в терминале:

     #+BEGIN_SRC shell

       pydoc -n 127.0.0.1
       Server ready at http://127.0.0.1:34553/
       Server commands: [b]rowser, [q]uit
       >

     #+END_SRC

     В браузере набираем адрес http://127.0.0.1:34553/,
     изучаем

**** В интерактивной консоли

     В терминале запускаем интерактивную оболочку python - ~python~ или ~ipython~
     и там вводим функцию ~help()~ или вы можете вызвать её с параметром, о
     котором вы хотите что-то узнать. Это может быть что угодно (модуль, класс,
     функция, объект...), например - ~help(os)~, понятное дело, модуль ~os~ нужно
     сперва импортировать.

     Изучаем.

**** Загрузка документации в PDF или HTML формате

     Идём по адресу [[https://docs.python.org/3/download.html][Download Python 3.10.4 Documentation]] (внешняя ссылка) и выбираем
     нужный формат.

*** Виртуальное окружение:

    [[https://docs.python-guide.org/dev/virtualenvs/][Pipenv & Virtual Environments]] (на английском) (внешняя ссылка)

*** Некоторые ссылки для изучения

    [[https://pyneng.readthedocs.io/ru/latest/contents.html][Python для сетевых инженеров]]
    [[https://python-course.readthedocs.io/projects/year1/en/latest/index.html][Программирование на языке Python: год 1]]
    [[https://python-course.readthedocs.io/projects/year2/en/latest/][Программирование на языке Python: год 2]]
    [[https://ps.readthedocs.io/ru/latest/index.html][Конспект по языку программирования Python]]
